@inproceedings{Anderson2003,
abstract = {This paper sets out to clear up a misconception prominent in the storage community today, that SCSI disc drives and IDE (ATA) disc drives are the same technology internally, and differ only in their external interface and in their suggested retail price. The two classes of drives represent two different product lines aimed at two different markets. In fact, both classes contain a range of products that address a variety of features and usage patterns beyond simply the interface used to talk to the device. The target market and final product specification are taken into account from the earliest design decision through the manufacturing and testing process. This paper attempts to clarify the differences by illuminating some of these design choices and their consequences on final device characteristics. This will hopefully allow the commu- nity to build better storage systems with better knowledge of the trade-offs being made and the performance characteristics that result},
author = {Anderson, Dave and Dykes, Jim and Riedel, Erik},
booktitle = {Proceedings of FAST ’03: 2nd USENIX Conference on File and Storage Technologies},
file = {:C$\backslash$:/Users/Reich/Documents/Mendeley Desktop/Proceedings of FAST ’03 2nd USENIX Conference on File and Storage Technologies/2003\_More than an interface - SCSI vs. ATA.pdf:pdf},
pages = {245--257},
title = {{More than an interface - SCSI vs. ATA}},
year = {2003}
}
@article{Mittal2014,
abstract = {Recent technological advances have greatly improved the performance and features of embedded systems. With the number of just mobile devices now reaching nearly equal to the population of Earth, embedded systems have truly become ubiquitous. These trends, however, have also made the task of managing their power consumption extremely challenging. In recent years, several techniques have been proposed to address this issue. In this paper, we survey the techniques for managing power consumption of embedded systems. We discuss the need of power management and provide a classification of the techniques on several important parameters to highlight their similarities and differences. This paper is intended to help the researchers and application-developers in gaining insights into the working of power management techniques and designing even more efficient high-performance embedded systems of tomorrow.},
archivePrefix = {arXiv},
arxivId = {1401.0765},
author = {Mittal, Sparsh},
doi = {10.1504/IJCAET.2014.065419},
eprint = {1401.0765},
file = {:C$\backslash$:/Users/Reich/Documents/Mendeley Desktop/International Journal of Computer Aided Engineering and Technology/2014\_A Survey of Techniques For Improving Energy Efficiency in Embedded Computing Systems.pdf:pdf},
issn = {17572665},
journal = {International Journal of Computer Aided Engineering and Technology},
keywords = {a survey of techniques,classification,embedded systems,energy efficiency,follows,for improving energy efficiency,green computing,in embedded computing systems,int,j,low power design,mittal,of computer,power management,reference to this paper,review,s,should be made as,survey,sustainable computing},
title = {{A Survey of Techniques For Improving Energy Efficiency in Embedded Computing Systems}},
url = {http://arxiv.org/abs/1401.0765},
year = {2014}
}
@misc{,
keywords = {FPGA},
mendeley-tags = {FPGA},
title = {{FPGA Architecture for the Challenge}},
url = {http://www.eecg.toronto.edu/~vaughn/challenge/fpga\_arch.html},
urldate = {2015-04-09}
}
@techreport{Intel2014,
author = {Intel},
file = {:C$\backslash$:/Users/Reich/Documents/Mendeley Desktop/Unknown/2014\_Intel Xeon Phi ™ Coprocessor - Datasheet.pdf:pdf},
number = {April},
title = {{Intel Xeon Phi ™ Coprocessor - Datasheet}},
url = {http://www.colfax-intl.com/nd/downloads/Xeon-Phi-Coprocessor-Datasheet.pdf},
year = {2014}
}
@article{Reinders2012,
author = {Reinders, James},
file = {:C$\backslash$:/Users/Reich/Documents/Mendeley Desktop/Unknown/2012\_An Overview of Programming for Intel ® Xeon ® processors and Intel ® Xeon Phi ™ coprocessors.pdf:pdf},
pages = {1--21},
title = {{An Overview of Programming for Intel ® Xeon ® processors and Intel ® Xeon Phi ™ coprocessors}},
url = {https://software.intel.com/sites/default/files/article/330164/an-overview-of-programming-for-intel-xeon-processors-and-intel-xeon-phi-coprocessors\_1.pdf},
year = {2012}
}
@article{Sirowy2008,
abstract = {Where do all the cycles go when microprocessor applications are implemented spatially as circuits on an FPGA? It is well established that certain sequential applications can be captured spatially and achieve breathtaking speedups when run on an FPGA, but why? Despite running at clock speeds orders of magnitude slower compared to their embedded processor equivalents, FPGA applications can "lose" enough cycles to create exceptionally fast spatially-oriented circuits. We profile and analyze three canonical applications amenable to FPGA speedup to quantify exactly where FPGAs gain that speedup. We compare the FPGA implementations to several idealized software platforms. The idealized software platforms give insight as to how FPGA implementations attain such dramatic speedups. We quantify the effects of parallelizing and pipelining instructions, streaming data, and eliminating the instruction fetch, showing exactly where the cycles are lost in an FPGA implementation. We also show how the memory interface to the FPGA will affect the performance. Our results show that custom memory interfaces are the most effective way at enabling much greater performance on the FPGA, and that memory interfaces traditional software use become a bottleneck when the FPGA uses the same interface. The results, though not surprising, provide a clearer and more intuitive understanding of the performance FPGAs can achieve, offering researchers and engineers alike a new angle to attack the task of parallelizing applications.},
author = {Sirowy, Scott and Forin, Alessandro},
file = {:C$\backslash$:/Users/Reich/Documents/Mendeley Desktop/Microsoft Research/2008\_Where's the Beef Why FPGAs Are So Fast.pdf:pdf},
journal = {Microsoft Research},
number = {September},
title = {{Where's the Beef ? Why FPGAs Are So Fast}},
year = {2008}
}
